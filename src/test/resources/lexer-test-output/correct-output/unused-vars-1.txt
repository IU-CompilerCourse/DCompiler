TOKENS

Token{type: Var, lexeme: 'var', literal: null, line: 1}
Token{type: Identifier, lexeme: 'a', literal: null, line: 1}
Token{type: Assignment, lexeme: ':=', literal: null, line: 1}
Token{type: IntLiteral, lexeme: '1', literal: 1, line: 1}
Token{type: Comma, lexeme: ',', literal: null, line: 1}
Token{type: Identifier, lexeme: 'b', literal: null, line: 1}
Token{type: Assignment, lexeme: ':=', literal: null, line: 1}
Token{type: IntLiteral, lexeme: '2', literal: 2, line: 1}
Token{type: Comma, lexeme: ',', literal: null, line: 1}
Token{type: Identifier, lexeme: 'c', literal: null, line: 1}
Token{type: Assignment, lexeme: ':=', literal: null, line: 1}
Token{type: IntLiteral, lexeme: '3', literal: 3, line: 1}
Token{type: Semicolon, lexeme: ';', literal: null, line: 1}
Token{type: Var, lexeme: 'var', literal: null, line: 2}
Token{type: Identifier, lexeme: 'd', literal: null, line: 2}
Token{type: Assignment, lexeme: ':=', literal: null, line: 2}
Token{type: Identifier, lexeme: 'a', literal: null, line: 2}
Token{type: Plus, lexeme: '+', literal: null, line: 2}
Token{type: IntLiteral, lexeme: '1', literal: 1, line: 2}
Token{type: Semicolon, lexeme: ';', literal: null, line: 2}
Token{type: Print, lexeme: 'print', literal: null, line: 3}
Token{type: Identifier, lexeme: 'd', literal: null, line: 3}
Token{type: Comma, lexeme: ',', literal: null, line: 3}
Token{type: Identifier, lexeme: 'c', literal: null, line: 3}
Token{type: Semicolon, lexeme: ';', literal: null, line: 3}
Token{type: EOF, lexeme: ';', literal: null, line: 3}

ERRORS

