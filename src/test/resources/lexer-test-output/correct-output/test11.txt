TOKENS

Token{type: Var, lexeme: 'var', literal: null, line: 1}
Token{type: Identifier, lexeme: 'intVal', literal: null, line: 1}
Token{type: Assignment, lexeme: ':=', literal: null, line: 1}
Token{type: IntLiteral, lexeme: '5', literal: 5, line: 1}
Token{type: Comma, lexeme: ',', literal: null, line: 1}
Token{type: Identifier, lexeme: 'realVal', literal: null, line: 1}
Token{type: Assignment, lexeme: ':=', literal: null, line: 1}
Token{type: DoubleLiteral, lexeme: '1.23', literal: 1.23, line: 1}
Token{type: Comma, lexeme: ',', literal: null, line: 1}
Token{type: Identifier, lexeme: 'boolVal', literal: null, line: 1}
Token{type: Assignment, lexeme: ':=', literal: null, line: 1}
Token{type: BooleanLiteral, lexeme: 'true', literal: true, line: 1}
Token{type: Semicolon, lexeme: ';', literal: null, line: 1}
Token{type: Var, lexeme: 'var', literal: null, line: 2}
Token{type: Identifier, lexeme: 'stringVal', literal: null, line: 2}
Token{type: Assignment, lexeme: ':=', literal: null, line: 2}
Token{type: StringLiteral, lexeme: '"string"', literal: string, line: 2}
Token{type: Comma, lexeme: ',', literal: null, line: 2}
Token{type: Identifier, lexeme: 'arrayVal', literal: null, line: 2}
Token{type: Assignment, lexeme: ':=', literal: null, line: 2}
Token{type: OpenBracket, lexeme: '[', literal: null, line: 2}
Token{type: OpenBracket, lexeme: '[', literal: null, line: 2}
Token{type: BooleanLiteral, lexeme: 'true', literal: true, line: 2}
Token{type: Comma, lexeme: ',', literal: null, line: 2}
Token{type: IntLiteral, lexeme: '2', literal: 2, line: 2}
Token{type: CloseBracket, lexeme: ']', literal: null, line: 2}
Token{type: Comma, lexeme: ',', literal: null, line: 2}
Token{type: OpenBracket, lexeme: '[', literal: null, line: 2}
Token{type: Empty, lexeme: 'empty', literal: null, line: 2}
Token{type: Comma, lexeme: ',', literal: null, line: 2}
Token{type: DoubleLiteral, lexeme: '1.23', literal: 1.23, line: 2}
Token{type: CloseBracket, lexeme: ']', literal: null, line: 2}
Token{type: CloseBracket, lexeme: ']', literal: null, line: 2}
Token{type: Comma, lexeme: ',', literal: null, line: 2}
Token{type: Identifier, lexeme: 'tupleVal', literal: null, line: 2}
Token{type: Assignment, lexeme: ':=', literal: null, line: 2}
Token{type: OpenBrace, lexeme: '{', literal: null, line: 2}
Token{type: Identifier, lexeme: 'x', literal: null, line: 2}
Token{type: Assignment, lexeme: ':=', literal: null, line: 2}
Token{type: IntLiteral, lexeme: '2', literal: 2, line: 2}
Token{type: CloseBrace, lexeme: '}', literal: null, line: 2}
Token{type: Semicolon, lexeme: ';', literal: null, line: 2}
Token{type: Var, lexeme: 'var', literal: null, line: 3}
Token{type: Identifier, lexeme: 'funcVal', literal: null, line: 3}
Token{type: Assignment, lexeme: ':=', literal: null, line: 3}
Token{type: Func, lexeme: 'func', literal: null, line: 3}
Token{type: OpenParen, lexeme: '(', literal: null, line: 3}
Token{type: Identifier, lexeme: 'x', literal: null, line: 3}
Token{type: CloseParen, lexeme: ')', literal: null, line: 3}
Token{type: Arrow, lexeme: '=>', literal: null, line: 3}
Token{type: Identifier, lexeme: 'x', literal: null, line: 3}
Token{type: Plus, lexeme: '+', literal: null, line: 3}
Token{type: IntLiteral, lexeme: '1', literal: 1, line: 3}
Token{type: Semicolon, lexeme: ';', literal: null, line: 3}
Token{type: Var, lexeme: 'var', literal: null, line: 4}
Token{type: Identifier, lexeme: 'nullVal', literal: null, line: 4}
Token{type: Semicolon, lexeme: ';', literal: null, line: 4}
Token{type: Print, lexeme: 'print', literal: null, line: 6}
Token{type: Identifier, lexeme: 'intVal', literal: null, line: 6}
Token{type: Comma, lexeme: ',', literal: null, line: 6}
Token{type: Identifier, lexeme: 'realVal', literal: null, line: 6}
Token{type: Comma, lexeme: ',', literal: null, line: 6}
Token{type: Identifier, lexeme: 'boolVal', literal: null, line: 6}
Token{type: Semicolon, lexeme: ';', literal: null, line: 6}
Token{type: Print, lexeme: 'print', literal: null, line: 7}
Token{type: Identifier, lexeme: 'stringVal', literal: null, line: 7}
Token{type: Comma, lexeme: ',', literal: null, line: 7}
Token{type: Identifier, lexeme: 'arrayVal', literal: null, line: 7}
Token{type: Comma, lexeme: ',', literal: null, line: 7}
Token{type: Identifier, lexeme: 'tupleVal', literal: null, line: 7}
Token{type: Semicolon, lexeme: ';', literal: null, line: 7}
Token{type: Print, lexeme: 'print', literal: null, line: 8}
Token{type: Identifier, lexeme: 'funcVal', literal: null, line: 8}
Token{type: Semicolon, lexeme: ';', literal: null, line: 8}
Token{type: Print, lexeme: 'print', literal: null, line: 9}
Token{type: Identifier, lexeme: 'nullVal', literal: null, line: 9}
Token{type: Semicolon, lexeme: ';', literal: null, line: 9}
Token{type: EOF, lexeme: '', literal: null, line: 10}

ERRORS

